// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PromoPilot.Data;

#nullable disable

namespace PromoPilot.Migrations
{
    [DbContext(typeof(PromoPilotDbContext))]
    [Migration("20250919050042_RenameTables")]
    partial class RenameTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PromoPilot.Models.Budget", b =>
                {
                    b.Property<int>("BudgetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetID"));

                    b.Property<decimal>("AllocatedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CampaignID")
                        .HasColumnType("int");

                    b.Property<decimal>("SpentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StoreID")
                        .HasColumnType("int");

                    b.HasKey("BudgetID");

                    b.HasIndex("CampaignID");

                    b.ToTable("Budget");
                });

            modelBuilder.Entity("PromoPilot.Models.Campaign", b =>
                {
                    b.Property<int>("CampaignID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampaignID"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StoreList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetProducts")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CampaignID");

                    b.ToTable("Campaign");
                });

            modelBuilder.Entity("PromoPilot.Models.CampaignReport", b =>
                {
                    b.Property<int>("ReportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportID"));

                    b.Property<int>("CampaignID")
                        .HasColumnType("int");

                    b.Property<decimal>("ConversionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("GeneratedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ROI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Reach")
                        .HasColumnType("int");

                    b.HasKey("ReportID");

                    b.HasIndex("CampaignID");

                    b.ToTable("CampaignReport");
                });

            modelBuilder.Entity("PromoPilot.Models.Engagement", b =>
                {
                    b.Property<int>("EngagementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EngagementID"));

                    b.Property<int>("CampaignID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<decimal>("PurchaseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RedemptionCount")
                        .HasColumnType("int");

                    b.HasKey("EngagementID");

                    b.HasIndex("CampaignID");

                    b.ToTable("Engagement");
                });

            modelBuilder.Entity("PromoPilot.Models.ExecutionStatus", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusID"));

                    b.Property<int>("CampaignID")
                        .HasColumnType("int");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreID")
                        .HasColumnType("int");

                    b.HasKey("StatusID");

                    b.HasIndex("CampaignID");

                    b.ToTable("ExecutionStatus");
                });

            modelBuilder.Entity("PromoPilot.Models.Budget", b =>
                {
                    b.HasOne("PromoPilot.Models.Campaign", "Campaign")
                        .WithMany("Budgets")
                        .HasForeignKey("CampaignID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("PromoPilot.Models.CampaignReport", b =>
                {
                    b.HasOne("PromoPilot.Models.Campaign", "Campaign")
                        .WithMany("CampaignReports")
                        .HasForeignKey("CampaignID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("PromoPilot.Models.Engagement", b =>
                {
                    b.HasOne("PromoPilot.Models.Campaign", "Campaign")
                        .WithMany("Engagements")
                        .HasForeignKey("CampaignID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("PromoPilot.Models.ExecutionStatus", b =>
                {
                    b.HasOne("PromoPilot.Models.Campaign", "Campaign")
                        .WithMany("ExecutionStatuses")
                        .HasForeignKey("CampaignID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("PromoPilot.Models.Campaign", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("CampaignReports");

                    b.Navigation("Engagements");

                    b.Navigation("ExecutionStatuses");
                });
#pragma warning restore 612, 618
        }
    }
}
